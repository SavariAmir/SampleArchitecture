// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.Persistence.EF;

namespace ProductManagement.Persistence.EF.Migrations
{
    [DbContext(typeof(ProductManagementContext))]
    [Migration("20200528173438_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Anshan.Framework.EF.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventPublishDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("Categories","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Categories.MainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainCategories","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Dimensions.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeafCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dimensions","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Dimensions.DimensionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DimensionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DimensionId");

                    b.ToTable("DimensionGroups","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Dimensions.DimensionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DimensionGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitOfMeasurementType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DimensionGroupId");

                    b.ToTable("DimensionItems","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.LeafCategories.LeafCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeafCategories","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Specifications.Specification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeafCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Specifications","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Specifications.SpecificationGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SpecificationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SpecificationId");

                    b.ToTable("SpecificationGroups","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Specifications.SpecificationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SpecificationGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SpecificationItemValueType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SpecificationGroupId");

                    b.ToTable("SpecificationItems","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Specifications.SpecificationItemOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SpecificationItemId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SpecificationItemId");

                    b.ToTable("SpecificationItemsOptions","ProductManagement");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Categories.Category", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Categories.MainCategory", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("MainCategoryId");

                    b.OwnsOne("ProductManagement.Domain.Models.Shared.Image", "Image", b1 =>
                        {
                            b1.Property<int>("CategoryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CategoryId");

                            b1.ToTable("Categories");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Categories.MainCategory", b =>
                {
                    b.OwnsOne("ProductManagement.Domain.Models.Shared.Image", "Image", b1 =>
                        {
                            b1.Property<int>("MainCategoryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MainCategoryId");

                            b1.ToTable("MainCategories");

                            b1.WithOwner()
                                .HasForeignKey("MainCategoryId");
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Dimensions.DimensionGroup", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Dimensions.Dimension", null)
                        .WithMany("DimensionGroups")
                        .HasForeignKey("DimensionId");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Dimensions.DimensionItem", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Dimensions.DimensionGroup", null)
                        .WithMany("DimensionItems")
                        .HasForeignKey("DimensionGroupId");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.LeafCategories.LeafCategory", b =>
                {
                    b.OwnsOne("ProductManagement.Domain.Models.Shared.Image", "Image", b1 =>
                        {
                            b1.Property<int>("LeafCategoryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LeafCategoryId");

                            b1.ToTable("LeafCategories");

                            b1.WithOwner()
                                .HasForeignKey("LeafCategoryId");
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Products.Product", b =>
                {
                    b.OwnsOne("ProductManagement.Domain.Models.Products.Dimensions.ProductDimension", "ProductDimension", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.OwnsOne("ProductManagement.Domain.Models.Shared.Image", "Image", b2 =>
                                {
                                    b2.Property<int>("ProductDimensionProductId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProductDimensionProductId");

                                    b2.ToTable("Products");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductDimensionProductId");
                                });

                            b1.OwnsMany("ProductManagement.Domain.Models.Products.Dimensions.ProductDimensionItemValue", "ProductDimensionItemValues", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("DimensionItemId")
                                        .HasColumnType("int");

                                    b2.Property<int>("ProductId")
                                        .HasColumnType("int");

                                    b2.Property<double>("Value")
                                        .HasColumnType("float");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ProductId");

                                    b2.ToTable("ProductDimensionItemValues","ProductManagement");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductId");
                                });
                        });

                    b.OwnsMany("ProductManagement.Domain.Models.Products.Images.ProductColorVariety", "ProductColorVarieties", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ColorType")
                                .HasColumnType("int");

                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<int>("ProductImageType")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("ProductId");

                            b1.ToTable("ProductColorVarieties","ProductManagement");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.OwnsOne("ProductManagement.Domain.Models.Products.ProductPrice", "ProductPrice", b2 =>
                                {
                                    b2.Property<int>("ProductColorVarietyId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("DiscountPercent")
                                        .HasColumnType("int");

                                    b2.HasKey("ProductColorVarietyId");

                                    b2.ToTable("ProductColorVarieties");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductColorVarietyId");

                                    b2.OwnsOne("ProductManagement.Domain.Models.Products.Money", "Amount", b3 =>
                                        {
                                            b3.Property<int>("ProductPriceProductColorVarietyId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<decimal>("Value")
                                                .HasColumnName("Amount")
                                                .HasColumnType("decimal(18,2)");

                                            b3.HasKey("ProductPriceProductColorVarietyId");

                                            b3.ToTable("ProductColorVarieties");

                                            b3.WithOwner()
                                                .HasForeignKey("ProductPriceProductColorVarietyId");
                                        });

                                    b2.OwnsOne("ProductManagement.Domain.Models.Products.Money", "DiscountAmount", b3 =>
                                        {
                                            b3.Property<int>("ProductPriceProductColorVarietyId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<decimal>("Value")
                                                .HasColumnName("DiscountAmount")
                                                .HasColumnType("decimal(18,2)");

                                            b3.HasKey("ProductPriceProductColorVarietyId");

                                            b3.ToTable("ProductColorVarieties");

                                            b3.WithOwner()
                                                .HasForeignKey("ProductPriceProductColorVarietyId");
                                        });

                                    b2.OwnsOne("ProductManagement.Domain.Models.Products.Money", "DueAmount", b3 =>
                                        {
                                            b3.Property<int>("ProductPriceProductColorVarietyId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<decimal>("Value")
                                                .HasColumnName("DueAmount")
                                                .HasColumnType("decimal(18,2)");

                                            b3.HasKey("ProductPriceProductColorVarietyId");

                                            b3.ToTable("ProductColorVarieties");

                                            b3.WithOwner()
                                                .HasForeignKey("ProductPriceProductColorVarietyId");
                                        });
                                });

                            b1.OwnsOne("ProductManagement.Domain.Models.Shared.Image", "ColorImage", b2 =>
                                {
                                    b2.Property<int>("ProductColorVarietyId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProductColorVarietyId");

                                    b2.ToTable("ProductColorVarieties");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductColorVarietyId");
                                });

                            b1.OwnsMany("ProductManagement.Domain.Models.Shared.Image", "Images", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("ProductColorVarietyId")
                                        .HasColumnType("int");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ProductColorVarietyId");

                                    b2.ToTable("ProductColorVarietyImages","ProductManagement");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductColorVarietyId");
                                });
                        });

                    b.OwnsOne("ProductManagement.Domain.Models.Products.ProductOverview", "Overview", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AtAGlance")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("ProductManagement.Domain.Models.Products.ProductVideo", "ProductVideo", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("ProductVideoLink")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("ProductManagement.Domain.Models.Products.Specifications.ProductSpecification", "ProductSpecification", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.OwnsMany("ProductManagement.Domain.Models.Products.Specifications.ProductSpecificationValue", "ProductSpecificationValues", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("ProductId")
                                        .HasColumnType("int");

                                    b2.Property<int>("SpecificationItemId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Value")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ProductId");

                                    b2.ToTable("ProductSpecificationValues","ProductManagement");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductId");
                                });
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Specifications.SpecificationGroup", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Specifications.Specification", null)
                        .WithMany("SpecificationGroups")
                        .HasForeignKey("SpecificationId");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Specifications.SpecificationItem", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Specifications.SpecificationGroup", null)
                        .WithMany("SpecificationItems")
                        .HasForeignKey("SpecificationGroupId");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Specifications.SpecificationItemOption", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Specifications.SpecificationItem", null)
                        .WithMany("SpecificationItemOptions")
                        .HasForeignKey("SpecificationItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
